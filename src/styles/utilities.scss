@function rem($pixels, $context: $mainFontSize) {
    @if (unitless($pixels)) {
      $pixels: $pixels*1px;
    }
    @if (unitless($context)) {
      $context: $context*1px;
    }
    @return $pixels / $context*1rem;
  }
  
  @mixin placeholder {
    &::-webkit-input-placeholder { @content; }
    &:-moz-placeholder           { @content; }
    &::-moz-placeholder          { @content; }
    &:-ms-input-placeholder      { @content; }
  }
  
  @mixin equal-size($width,$height: $width) {
    width: $width;
    height: $height;
  }
  
  @mixin adaptive_bg($src) {
    width: 100%;
    height: 100%;
    background: url($src) no-repeat;
    background-size: cover;
  }
  
  @mixin border_hover($type1, $type2, $width, $color, $axis) {
    border-#{$type1}: $width solid $color;
    border-#{$type2}: $width solid $color;
    transform: #{$axis};
  }
  
  @mixin center_absolute_pos() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @mixin fixed-vh($height) {
    height: #{$height}vh;
    height: calc(var(--vh, 1vh)*#{$height});
  }

  @mixin wrapper($max-width) {
    display: flex;
    flex-direction: column;
    margin: 0 auto;
    max-width: $max-width;
  }
  
  @mixin container {
    display: flex;
    flex-direction: column;
  }

  @mixin max-size($n) {
    $val: 100% / $columns * $n;
    max-width: #{calc(#{$val} - #{$offset})};
  }
  @mixin min-size($n) {
    $val: 100% / $columns * $n;
    min-width: #{calc(#{$val} - #{$offset})};
  }